class Solution {
    static class pair
    {
    int i;
    int j;
    pair(int a,int b)
    {
    i=a;
    j=b;
    }
    }
    static int[] satisfyEqn(int[] A, int n) {
    HashMap<Integer,pair>hm=new HashMap<>();
    int arr[]=new int[4];
    Arrays.fill(arr,-1);
    for(int i=0;i<n-1;i++)
    {
    for(int j=i+1;j<n;j++)
    {
    int sum=A[i]+A[j];
    if(hm.containsKey(sum)==false)
    hm.put(sum,new pair(i,j));
    else
    {
    pair p=hm.get(sum);
    if(p.i!=i && p.j!=i && p.i!=j && p.j!=j)
    {
    int []curr=new int[4];
  
    curr[0]=p.i;
    curr[1]=p.j;
    curr[2]=i;
    curr[3]=j;
    if(arr[0]==-1)
    {
    arr[0]=curr[0];
    arr[1]=curr[1];
    arr[2]=curr[2];
    arr[3]=curr[3];
    }
    boolean replace =false;
    for(int k=0;k<4;k++)
    {
    if(curr[k]<arr[k])
    {
    replace =true;
    break;
    }
    else if(curr[k]>arr[k])
    {
    break;
    }
    }
    if(replace==true)
    {
    arr[0]=curr[0];
    arr[1]=curr[1];
    arr[2]=curr[2];
    arr[3]=curr[3];
    }
    }
    }
    }
    }
    
    
    return arr;
    }
};
